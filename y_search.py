# give number of candidates that need to be 4-unsorted (analyzed for 'y' value)
#
# based on z_histogram output


# total (13,4)-sorted arrangements  = 25! / (7! * 6!^3)
total = 8245512475200 

freqRAW = [1842200399952,1,24,299,2575,17141,93445,431974,1732900,6132733,19386509,55285294,143410883,340851939,747168628,1519852987,2885529854,5141236378,8641123998,13766966056,20885165568,30297090008,42191891181,56610626270,73427742002,92351961286,112944740253,134651547535,156840041933,178839605563,199978495051,219616721590,237174160781,252153788893,264159740478,272910061701,278243726656,280122151508,278624848641,273939942301,266349430651,256210713705,243935218904,229966382930,214757760330,198752935391,182367674058,165975645176,149898137078,134398436975,119680531370,105891495117,93126559183,81435805521,70831633237,61296275499,52788998476,45252612449,38619182267,32814761299,27763169598,23388861285,19619007447,16384898221,13622779388,11274256082,9286377276,7611501914,6207034846,5035094057,4062152210,3258677123,2598777737,2059869366,1622354250,1269324204,986274231,760835915,582525732,442513450,333406453,249057526,184389396,135241532,98229442,70622824,50236552,35338405,24568294,16869655,11430945,7635883,5022262,3247422,2060583,1280242,776784,458797,262787,145284,77095,38986,18621,8298,3396,1248,397,104,20,2,0,0,0,0,0,0,0,0,0,0] 
freqs = freqRAW[1:]
bad = freqRAW[0] + 229 * 27132 * 1716  # must add back ctr0rolls (skipahead)


assert sum(freqs) + bad == total

print(f"bad={bad}, total={total}, bad/total={bad/total}")

print("# z, N(z), N(>=z)")
for i in range(len(freqs)):
   print(i, freqs[i], sum(freqs[i:]))
